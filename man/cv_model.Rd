% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv-model-fit.R
\name{cv_model}
\alias{cv_model}
\alias{cv_model.default}
\alias{cv_model.data.frame}
\alias{cv_model.matrix}
\alias{cv_model.formula}
\alias{cv_model.recipe}
\title{Fit a \code{cv_model}}
\usage{
cv_model(x, ...)

\method{cv_model}{default}(x, ...)

\method{cv_model}{data.frame}(x, y, intercept = TRUE, ...)

\method{cv_model}{matrix}(x, y, intercept = TRUE, ...)

\method{cv_model}{formula}(formula, data, intercept = TRUE, ...)

\method{cv_model}{recipe}(x, data, intercept = TRUE, ...)
}
\arguments{
\item{x}{Depending on the context:
\itemize{
\item A \strong{data frame} of predictors.
\item A \strong{matrix} of predictors.
\item A \strong{recipe} specifying a set of preprocessing steps
created from \code{\link[recipes:recipe]{recipes::recipe()}}.
}}

\item{...}{See Details}

\item{y}{When \code{x} is a \strong{data frame} or \strong{matrix}, \code{y} is the outcome
specified as:
\itemize{
\item A \strong{data frame} with 1 numeric column.
\item A \strong{matrix} with 1 numeric column.
\item A numeric \strong{vector}.
}}

\item{intercept}{Should intercept column be created? Default is \code{TRUE}.}

\item{formula}{A formula specifying the outcome terms on the left-hand side,
and the predictor terms on the right-hand side.}

\item{data}{When a \strong{recipe} or \strong{formula} is used, \code{data} is specified as:
\itemize{
\item A \strong{data frame} containing both the predictors and the outcome.
}}
}
\value{
A \code{bmbstats_cv_model} object.
}
\description{
\code{cv_model()} fits a model.
}
\details{
Extra parameters using \code{...} are forwarded to implementation function.
These parameters are the following:
\describe{
\item{model_func}{Model function. Default is \code{\link{lm_model}}. See also
\code{\link{baseline_model}}}
\item{predict_func}{Predict function. Default is \code{\link{generic_predict}}}
\item{perf_func}{Model performance function. Default is \code{\link{performance_metrics}}}
\item{SESOI_lower}{Function or numeric scalar. Default is \code{\link{SESOI_lower_func}}}
\item{SESOI_upper}{Function or numeric scalar. Default is \code{\link{SESOI_upper_func}}}
\item{control}{Control structure using \code{\link{model_control}}. The parameters
used in \code{cv_model} are \code{cv_folds}, and \code{cv_strata}}
\item{na.rm}{Should NAs be removed? Default is FALSE. This is forwarded  to
\code{model_func}, \code{predict_func}, \code{perfr_func}, \code{SESOI_lower},
and \code{SESOI_upper}}
}

In summary, \code{cv_model} represents a wrapper function, that performs \code{model_func} within
the cross-validation loop and provide it's predictive performance metrics using \code{perf_func}
}
\examples{
m1 <- cv_model(
  Sepal.Length ~ . - Species,
  iris
)
predict(m1, new_data = iris)
}
